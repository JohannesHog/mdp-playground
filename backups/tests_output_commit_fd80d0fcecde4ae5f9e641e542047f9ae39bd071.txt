......./rl_toy/envs/rl_toy_env.py:322: DeprecationWarning: elementwise comparison failed; this will raise an error in the future.
  self.is_terminal_state = self.config["is_terminal_state"] if callable(self.config["is_terminal_state"]) else lambda s: s in self.config["is_terminal_state"]
......
----------------------------------------------------------------------
Ran 12 tests in 0.302s

OK
[32;1;4mTEST_CONTINUOUS_DYNAMICS[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [1.59339006 0.68189965 1.49608203 0.19183192]
self.augmented_state, len [[nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], array([1.59339006, 0.68189965, 1.49608203, 0.19183192])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 4, 'action_space_dim': 4, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 4), 'action_space_relevant_indices': range(0, 4)}
sars', done = [1.59339006 0.68189965 1.49608203 0.19183192] [1 1 1 1] 0.0 [2.59339006 1.68189965 2.49608203 1.19183192] False 

sars', done = [2.59339006 1.68189965 2.49608203 1.19183192] [1 1 1 1] 0.0 [3.59339006 2.68189965 3.49608203 2.19183192] False 

sars', done = [3.59339006 2.68189965 3.49608203 2.19183192] [1 1 1 1] 0.0 [4.59339006 3.68189965 4.49608203 3.19183192] False 

sars', done = [4.59339006 3.68189965 4.49608203 3.19183192] [1 1 1 1] 0.0 [5.59339006 4.68189965 5.49608203 4.19183192] False 

sars', done = [5.59339006 4.68189965 5.49608203 4.19183192] [1 1 1 1] 0.0 [6.59339006 5.68189965 6.49608203 5.19183192] False 

sars', done = [6.59339006 5.68189965 6.49608203 5.19183192] [1 1 1 1] 0.0 [7.59339006 6.68189965 7.49608203 6.19183192] False 

sars', done = [7.59339006 6.68189965 7.49608203 6.19183192] [1 1 1 1] 0.0 [8.59339006 7.68189965 8.49608203 7.19183192] False 

sars', done = [8.59339006 7.68189965 8.49608203 7.19183192] [1 1 1 1] 0.0 [9.59339006 8.68189965 9.49608203 8.19183192] False 

sars', done = [9.59339006 8.68189965 9.49608203 8.19183192] [1 1 1 1] 0.0 [10.59339006  9.68189965 10.49608203  9.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.691850745534255e-16
sars', done = [10.59339006  9.68189965 10.49608203  9.19183192] [1 1 1 1] -7.691850745534256e-17 [11.59339006 10.68189965 11.49608203 10.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.5288109232143817e-07
sars', done = [11.59339006 10.68189965 11.49608203 10.19183192] [1 1 1 1] -2.5288109232143818e-08 [12.59339006 11.68189965 12.49608203 11.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.776356839400251e-15
sars', done = [12.59339006 11.68189965 12.49608203 11.19183192] [1 1 1 1] -1.7763568394002508e-16 [13.59339006 12.68189965 13.49608203 12.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.776356839400251e-15
sars', done = [13.59339006 12.68189965 13.49608203 12.19183192] [1 1 1 1] -1.7763568394002508e-16 [14.59339006 13.68189965 14.49608203 13.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.776356839400251e-15
sars', done = [14.59339006 13.68189965 14.49608203 13.19183192] [1 1 1 1] -1.7763568394002508e-16 [15.59339006 14.68189965 15.49608203 14.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.538370149106851e-15
sars', done = [15.59339006 14.68189965 15.49608203 14.19183192] [1 1 1 1] -1.5383701491068512e-16 [16.59339006 15.68189965 16.49608203 15.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.538370149106851e-15
sars', done = [16.59339006 15.68189965 16.49608203 15.19183192] [1 1 1 1] -1.5383701491068512e-16 [17.59339006 16.68189965 17.49608203 16.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.5121479338940403e-15
sars', done = [17.59339006 16.68189965 17.49608203 16.19183192] [1 1 1 1] -2.51214793389404e-16 [18.59339006 17.68189965 18.49608203 17.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.776356839400251e-15
sars', done = [18.59339006 17.68189965 18.49608203 17.19183192] [1 1 1 1] -1.7763568394002508e-16 [19.59339006 18.68189965 19.49608203 18.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.351167857633658e-15
sars', done = [19.59339006 18.68189965 19.49608203 18.19183192] [1 1 1 1] -4.3511678576336585e-16 [20.59339006 19.68189965 20.49608203 19.19183192] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.351167857633659e-15
sars', done = [20.59339006 19.68189965 20.49608203 19.19183192] [1 1 1 1] -4.351167857633659e-16 [21.59339006 20.68189965 21.49608203 20.19183192] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -2.528811144872745e-08 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [ 2.53644409 -0.33852992 -0.16403416 -0.76406872]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [1.59339006 0.68189965 1.49608203 0.19183192]
self.augmented_state, len [[nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], array([1.59339006, 0.68189965, 1.49608203, 0.19183192])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 4, 'action_space_dim': 4, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 4), 'action_space_relevant_indices': range(0, 4)}
sars', done = [1.59339006 0.68189965 1.49608203 0.19183192] [-1.02602039 -0.03453188  1.20080602  1.01060268] 0.0 [0.56736967 0.64736777 2.69688805 1.2024346 ] False 

sars', done = [0.56736967 0.64736777 2.69688805 1.2024346 ] [ 0.49731388 -0.22546309  2.59784336 -0.06796953] 0.0 [1.06468355 0.42190468 5.29473142 1.13446506] False 

sars', done = [1.06468355 0.42190468 5.29473142 1.13446506] [ 0.80844683 -0.87541567  0.10374673  0.3402196 ] 0.0 [ 1.87313038 -0.45351099  5.39847815  1.47468466] False 

sars', done = [ 1.87313038 -0.45351099  5.39847815  1.47468466] [1.5822203  0.03301895 0.59522292 0.23698326] 0.0 [ 3.45535068 -0.42049204  5.99370108  1.71166792] False 

sars', done = [ 3.45535068 -0.42049204  5.99370108  1.71166792] [-1.96338282  0.65083982 -2.32382061 -0.91443897] 0.0 [1.49196786 0.23034778 3.66988046 0.79722895] False 

sars', done = [1.49196786 0.23034778 3.66988046 0.79722895] [ 1.08422905  1.68142203 -0.88418494 -1.1662234 ] 0.0 [ 2.57619691  1.9117698   2.78569552 -0.36899445] False 

sars', done = [ 2.57619691  1.9117698   2.78569552 -0.36899445] [-3.01876878  0.88853234  1.28439466 -0.28783456] 0.0 [-0.44257187  2.80030214  4.07009019 -0.65682901] False 

sars', done = [-0.44257187  2.80030214  4.07009019 -0.65682901] [-0.94472334 -0.76036033 -1.92269503 -0.11208195] 0.0 [-1.38729521  2.03994181  2.14739516 -0.76891096] False 

sars', done = [-1.38729521  2.03994181  2.14739516 -0.76891096] [0.81603462 0.2979119  1.21736607 0.18881707] 0.0 [-0.57126059  2.33785371  3.36476122 -0.58009389] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.568359368075376
sars', done = [-0.57126059  2.33785371  3.36476122 -0.58009389] [-0.22381054 -1.06304026  0.90577096 -1.29267524] -1.1568359368075376 [-0.79507113  1.27481345  4.27053219 -1.87276913] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.467600611356803
sars', done = [-0.79507113  1.27481345  4.27053219 -1.87276913] [-0.23227264 -0.3016275   0.22405119 -0.81747557] -1.2467600611356802 [-1.02734377  0.97318595  4.49458338 -2.6902447 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 14.775847820686716
sars', done = [-1.02734377  0.97318595  4.49458338 -2.6902447 ] [-2.80103056  1.14276482  0.47955959  1.57279604] -1.4775847820686716 [-3.82837433  2.11595077  4.97414297 -1.11744866] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 15.08571017246759
sars', done = [-3.82837433  2.11595077  4.97414297 -1.11744866] [ 0.58341643 -0.26893996 -0.55437416  0.82444369] -1.508571017246759 [-3.2449579   1.84701081  4.41976881 -0.29300497] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.741188217561682
sars', done = [-3.2449579   1.84701081  4.41976881 -0.29300497] [-0.48138651  0.88445119 -1.57803864 -1.15638961] -1.274118821756168 [-3.72634441  2.73146201  2.84173017 -1.44939458] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.915367495048411
sars', done = [-3.72634441  2.73146201  2.84173017 -1.44939458] [-1.10518036e-04 -2.99463719e-01  6.32880506e-01  1.71473066e+00] -1.191536749504841 [-3.72645493  2.43199829  3.47461067  0.26533608] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.522896089361744
sars', done = [-3.72645493  2.43199829  3.47461067  0.26533608] [1.97910478 0.60001979 0.8231252  0.03386892] -1.2522896089361744 [-1.74735015  3.03201808  4.29773587  0.299205  ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.259546545240832
sars', done = [-1.74735015  3.03201808  4.29773587  0.299205  ] [-8.11410186e-04 -1.94723737e-01  3.77515548e-01 -1.76453971e+00] -1.2259546545240831 [-1.74816156  2.83729434  4.67525142 -1.4653347 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.801958011456335
sars', done = [-1.74816156  2.83729434  4.67525142 -1.4653347 ] [ 1.09983174  0.10633353 -0.93832105  0.8614474 ] -1.1801958011456335 [-0.64832982  2.94362788  3.73693037 -0.6038873 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.80223527676625
sars', done = [-0.64832982  2.94362788  3.73693037 -0.6038873 ] [-0.10532601 -1.51673801 -0.3333629   0.2007682 ] -1.180223527676625 [-0.75365584  1.42688987  3.40356747 -0.4031191 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.699130025615165
sars', done = [-0.75365584  1.42688987  3.40356747 -0.4031191 ] [-1.35194226  1.65787554  0.12053753  1.07072656] -1.2699130025615166 [-2.1055981   3.08476541  3.52410499  0.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.66356766881541
sars', done = [-2.1055981   3.08476541  3.52410499  0.66760745] [1 1 1 1] -1.166356766881541 [-1.1055981   4.08476541  4.52410499  1.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 10.760002448026931
sars', done = [-1.1055981   4.08476541  4.52410499  1.66760745] [1 1 1 1] -1.076000244802693 [-0.1055981   5.08476541  5.52410499  2.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 9.686278123850355
sars', done = [-0.1055981   5.08476541  5.52410499  2.66760745] [1 1 1 1] -0.9686278123850356 [0.8944019  6.08476541 6.52410499 3.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 8.612079436462801
sars', done = [0.8944019  6.08476541 6.52410499 3.66760745] [1 1 1 1] -0.8612079436462802 [1.8944019  7.08476541 7.52410499 4.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.573119832864063
sars', done = [1.8944019  7.08476541 7.52410499 4.66760745] [1 1 1 1] -0.7573119832864064 [2.8944019  8.08476541 8.52410499 5.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.479905172217762
sars', done = [2.8944019  8.08476541 8.52410499 5.66760745] [1 1 1 1] -0.7479905172217762 [3.8944019  9.08476541 9.52410499 6.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.81992491053783
sars', done = [3.8944019  9.08476541 9.52410499 6.66760745] [1 1 1 1] -0.581992491053783 [ 4.8944019  10.08476541 10.52410499  7.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.219621313118331
sars', done = [ 4.8944019  10.08476541 10.52410499  7.66760745] [1 1 1 1] -0.42196213131183313 [ 5.8944019  11.08476541 11.52410499  8.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.1920929080685522e-07
sars', done = [ 5.8944019  11.08476541 11.52410499  8.66760745] [1 1 1 1] -1.1920929080685522e-08 [ 6.8944019  12.08476541 12.52410499  9.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.0350298695716184e-07
sars', done = [ 6.8944019  12.08476541 12.52410499  9.66760745] [1 1 1 1] -2.0350298695716185e-08 [ 7.8944019  13.08476541 13.52410499 10.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739519735376e-07
sars', done = [ 7.8944019  13.08476541 13.52410499 10.66760745] [1 1 1 1] -1.6858739519735375e-08 [ 8.8944019  14.08476541 14.52410499 11.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739481276123e-07
sars', done = [ 8.8944019  14.08476541 14.52410499 11.66760745] [1 1 1 1] -1.6858739481276122e-08 [ 9.8944019  15.08476541 15.52410499 12.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739481276123e-07
sars', done = [ 9.8944019  15.08476541 15.52410499 12.66760745] [1 1 1 1] -1.6858739481276122e-08 [10.8944019  16.08476541 16.52410499 13.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.691850745534255e-16
sars', done = [10.8944019  16.08476541 16.52410499 13.66760745] [1 1 1 1] -7.691850745534256e-17 [11.8944019  17.08476541 17.52410499 14.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [11.8944019  17.08476541 17.52410499 14.66760745] [1 1 1 1] 0.0 [12.8944019  18.08476541 18.52410499 15.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [12.8944019  18.08476541 18.52410499 15.66760745] [1 1 1 1] 0.0 [13.8944019  19.08476541 19.52410499 16.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739558194629e-07
sars', done = [13.8944019  19.08476541 19.52410499 16.66760745] [1 1 1 1] -1.6858739558194628e-08 [14.8944019  20.08476541 20.52410499 17.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 3.076740298213702e-15
sars', done = [14.8944019  20.08476541 20.52410499 17.66760745] [1 1 1 1] -3.0767402982137023e-16 [15.8944019  21.08476541 21.52410499 18.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.0242958677880805e-15
sars', done = [15.8944019  21.08476541 21.52410499 18.66760745] [1 1 1 1] -5.02429586778808e-16 [16.8944019  22.08476541 22.52410499 19.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.0242958677880805e-15
sars', done = [16.8944019  22.08476541 22.52410499 19.66760745] [1 1 1 1] -5.02429586778808e-16 [17.8944019  23.08476541 23.52410499 20.66760745] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -20.545433953659224 0 40
#TODO for cont. spaces: reset
RESET called. State reset to: [ 2.53644409 -0.33852992 -0.16403416 -0.76406872]
[32;1;4mTEST_CONTINUOUS_DYNAMICS_DELAY[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [1.59339006 0.68189965 1.49608203 0.19183192]
self.augmented_state, len [[nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], array([1.59339006, 0.68189965, 1.49608203, 0.19183192])] 12
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 4, 'action_space_dim': 4, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 1, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 4), 'action_space_relevant_indices': range(0, 4)}
sars', done = [1.59339006 0.68189965 1.49608203 0.19183192] [-1.02602039 -0.03453188  1.20080602  1.01060268] 0.0 [0.56736967 0.64736777 2.69688805 1.2024346 ] False 

sars', done = [0.56736967 0.64736777 2.69688805 1.2024346 ] [ 0.49731388 -0.22546309  2.59784336 -0.06796953] 0.0 [1.06468355 0.42190468 5.29473142 1.13446506] False 

sars', done = [1.06468355 0.42190468 5.29473142 1.13446506] [ 0.80844683 -0.87541567  0.10374673  0.3402196 ] 0.0 [ 1.87313038 -0.45351099  5.39847815  1.47468466] False 

sars', done = [ 1.87313038 -0.45351099  5.39847815  1.47468466] [1.5822203  0.03301895 0.59522292 0.23698326] 0.0 [ 3.45535068 -0.42049204  5.99370108  1.71166792] False 

sars', done = [ 3.45535068 -0.42049204  5.99370108  1.71166792] [-1.96338282  0.65083982 -2.32382061 -0.91443897] 0.0 [1.49196786 0.23034778 3.66988046 0.79722895] False 

sars', done = [1.49196786 0.23034778 3.66988046 0.79722895] [ 1.08422905  1.68142203 -0.88418494 -1.1662234 ] 0.0 [ 2.57619691  1.9117698   2.78569552 -0.36899445] False 

sars', done = [ 2.57619691  1.9117698   2.78569552 -0.36899445] [-3.01876878  0.88853234  1.28439466 -0.28783456] 0.0 [-0.44257187  2.80030214  4.07009019 -0.65682901] False 

sars', done = [-0.44257187  2.80030214  4.07009019 -0.65682901] [-0.94472334 -0.76036033 -1.92269503 -0.11208195] 0.0 [-1.38729521  2.03994181  2.14739516 -0.76891096] False 

sars', done = [-1.38729521  2.03994181  2.14739516 -0.76891096] [0.81603462 0.2979119  1.21736607 0.18881707] 0.0 [-0.57126059  2.33785371  3.36476122 -0.58009389] False 

sars', done = [-0.57126059  2.33785371  3.36476122 -0.58009389] [-0.22381054 -1.06304026  0.90577096 -1.29267524] 0.0 [-0.79507113  1.27481345  4.27053219 -1.87276913] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.568359368075376
sars', done = [-0.79507113  1.27481345  4.27053219 -1.87276913] [-0.23227264 -0.3016275   0.22405119 -0.81747557] -1.1568359368075376 [-1.02734377  0.97318595  4.49458338 -2.6902447 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.467600611356803
sars', done = [-1.02734377  0.97318595  4.49458338 -2.6902447 ] [-2.80103056  1.14276482  0.47955959  1.57279604] -1.2467600611356802 [-3.82837433  2.11595077  4.97414297 -1.11744866] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 14.775847820686716
sars', done = [-3.82837433  2.11595077  4.97414297 -1.11744866] [ 0.58341643 -0.26893996 -0.55437416  0.82444369] -1.4775847820686716 [-3.2449579   1.84701081  4.41976881 -0.29300497] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 15.08571017246759
sars', done = [-3.2449579   1.84701081  4.41976881 -0.29300497] [-0.48138651  0.88445119 -1.57803864 -1.15638961] -1.508571017246759 [-3.72634441  2.73146201  2.84173017 -1.44939458] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.741188217561682
sars', done = [-3.72634441  2.73146201  2.84173017 -1.44939458] [-1.10518036e-04 -2.99463719e-01  6.32880506e-01  1.71473066e+00] -1.274118821756168 [-3.72645493  2.43199829  3.47461067  0.26533608] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.915367495048411
sars', done = [-3.72645493  2.43199829  3.47461067  0.26533608] [1.97910478 0.60001979 0.8231252  0.03386892] -1.191536749504841 [-1.74735015  3.03201808  4.29773587  0.299205  ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.522896089361744
sars', done = [-1.74735015  3.03201808  4.29773587  0.299205  ] [-8.11410186e-04 -1.94723737e-01  3.77515548e-01 -1.76453971e+00] -1.2522896089361744 [-1.74816156  2.83729434  4.67525142 -1.4653347 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.259546545240832
sars', done = [-1.74816156  2.83729434  4.67525142 -1.4653347 ] [ 1.09983174  0.10633353 -0.93832105  0.8614474 ] -1.2259546545240831 [-0.64832982  2.94362788  3.73693037 -0.6038873 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.801958011456335
sars', done = [-0.64832982  2.94362788  3.73693037 -0.6038873 ] [-0.10532601 -1.51673801 -0.3333629   0.2007682 ] -1.1801958011456335 [-0.75365584  1.42688987  3.40356747 -0.4031191 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.80223527676625
sars', done = [-0.75365584  1.42688987  3.40356747 -0.4031191 ] [-1.35194226  1.65787554  0.12053753  1.07072656] -1.180223527676625 [-2.1055981   3.08476541  3.52410499  0.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 12.699130025615165
sars', done = [-2.1055981   3.08476541  3.52410499  0.66760745] [1 1 1 1] -1.2699130025615166 [-1.1055981   4.08476541  4.52410499  1.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.66356766881541
sars', done = [-1.1055981   4.08476541  4.52410499  1.66760745] [1 1 1 1] -1.166356766881541 [-0.1055981   5.08476541  5.52410499  2.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 10.760002448026931
sars', done = [-0.1055981   5.08476541  5.52410499  2.66760745] [1 1 1 1] -1.076000244802693 [0.8944019  6.08476541 6.52410499 3.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 9.686278123850355
sars', done = [0.8944019  6.08476541 6.52410499 3.66760745] [1 1 1 1] -0.9686278123850356 [1.8944019  7.08476541 7.52410499 4.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 8.612079436462801
sars', done = [1.8944019  7.08476541 7.52410499 4.66760745] [1 1 1 1] -0.8612079436462802 [2.8944019  8.08476541 8.52410499 5.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.573119832864063
sars', done = [2.8944019  8.08476541 8.52410499 5.66760745] [1 1 1 1] -0.7573119832864064 [3.8944019  9.08476541 9.52410499 6.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.479905172217762
sars', done = [3.8944019  9.08476541 9.52410499 6.66760745] [1 1 1 1] -0.7479905172217762 [ 4.8944019  10.08476541 10.52410499  7.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.81992491053783
sars', done = [ 4.8944019  10.08476541 10.52410499  7.66760745] [1 1 1 1] -0.581992491053783 [ 5.8944019  11.08476541 11.52410499  8.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.219621313118331
sars', done = [ 5.8944019  11.08476541 11.52410499  8.66760745] [1 1 1 1] -0.42196213131183313 [ 6.8944019  12.08476541 12.52410499  9.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.1920929080685522e-07
sars', done = [ 6.8944019  12.08476541 12.52410499  9.66760745] [1 1 1 1] -1.1920929080685522e-08 [ 7.8944019  13.08476541 13.52410499 10.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.0350298695716184e-07
sars', done = [ 7.8944019  13.08476541 13.52410499 10.66760745] [1 1 1 1] -2.0350298695716185e-08 [ 8.8944019  14.08476541 14.52410499 11.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739519735376e-07
sars', done = [ 8.8944019  14.08476541 14.52410499 11.66760745] [1 1 1 1] -1.6858739519735375e-08 [ 9.8944019  15.08476541 15.52410499 12.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739481276123e-07
sars', done = [ 9.8944019  15.08476541 15.52410499 12.66760745] [1 1 1 1] -1.6858739481276122e-08 [10.8944019  16.08476541 16.52410499 13.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739481276123e-07
sars', done = [10.8944019  16.08476541 16.52410499 13.66760745] [1 1 1 1] -1.6858739481276122e-08 [11.8944019  17.08476541 17.52410499 14.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.691850745534255e-16
sars', done = [11.8944019  17.08476541 17.52410499 14.66760745] [1 1 1 1] -7.691850745534256e-17 [12.8944019  18.08476541 18.52410499 15.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [12.8944019  18.08476541 18.52410499 15.66760745] [1 1 1 1] 0.0 [13.8944019  19.08476541 19.52410499 16.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [13.8944019  19.08476541 19.52410499 16.66760745] [1 1 1 1] 0.0 [14.8944019  20.08476541 20.52410499 17.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.6858739558194629e-07
sars', done = [14.8944019  20.08476541 20.52410499 17.66760745] [1 1 1 1] -1.6858739558194628e-08 [15.8944019  21.08476541 21.52410499 18.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 3.076740298213702e-15
sars', done = [15.8944019  21.08476541 21.52410499 18.66760745] [1 1 1 1] -3.0767402982137023e-16 [16.8944019  22.08476541 22.52410499 19.66760745] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.0242958677880805e-15
sars', done = [16.8944019  22.08476541 22.52410499 19.66760745] [1 1 1 1] -5.02429586778808e-16 [17.8944019  23.08476541 23.52410499 20.66760745] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -20.545433953659224 0 40
#TODO for cont. spaces: reset
RESET called. State reset to: [ 2.53644409 -0.33852992 -0.16403416 -0.76406872]
[32;1;4mTEST_CONTINUOUS_DYNAMICS_R_NOISE[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [1.59339006 0.68189965 1.49608203 0.19183192]
self.augmented_state, len [[nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], [nan, nan, nan, nan], array([1.59339006, 0.68189965, 1.49608203, 0.19183192])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 4, 'action_space_dim': 4, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 4), 'action_space_relevant_indices': range(0, 4), 'reward_noise': <function TestRLToyEnv.test_continuous_dynamics.<locals>.<lambda> at 0x7fa658adc9d8>}
sars', done = [1.59339006 0.68189965 1.49608203 0.19183192] [1 1 1 1] -0.7070735117694138 [2.59339006 1.68189965 2.49608203 1.19183192] False 

sars', done = [2.59339006 1.68189965 2.49608203 1.19183192] [1 1 1 1] 0.446809534622282 [3.59339006 2.68189965 3.49608203 2.19183192] False 

sars', done = [3.59339006 2.68189965 3.49608203 2.19183192] [1 1 1 1] 0.15073533571366643 [4.59339006 3.68189965 4.49608203 3.19183192] False 

sars', done = [4.59339006 3.68189965 4.49608203 3.19183192] [1 1 1 1] -0.3462036819704161 [5.59339006 4.68189965 5.49608203 4.19183192] False 

sars', done = [5.59339006 4.68189965 5.49608203 4.19183192] [1 1 1 1] 0.8068703205490703 [6.59339006 5.68189965 6.49608203 5.19183192] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 2.4576923846248486 0 0.0 0 5
#TODO for cont. spaces: reset
RESET called. State reset to: [ 2.53644409 -0.33852992 -0.16403416 -0.76406872]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [ 1.59339006  0.68189965  1.49608203  0.19183192  2.53644409 -0.33852992
 -0.16403416]
self.augmented_state, len [[nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], array([ 1.59339006,  0.68189965,  1.49608203,  0.19183192,  2.53644409,
       -0.33852992, -0.16403416])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 7, 'action_space_dim': 7, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [0, 1, 2, 6], 'action_space_relevant_indices': [0, 1, 2, 6]}
sars', done = [ 1.59339006  0.68189965  1.49608203  0.19183192  2.53644409 -0.33852992
 -0.16403416] [ 1.          1.          1.          1.01060268  0.49731388 -0.22546309
  1.        ] 0.0 [ 2.59339006  1.68189965  2.49608203  1.2024346   3.03375796 -0.56399301
  0.83596584] False 

sars', done = [ 2.59339006  1.68189965  2.49608203  1.2024346   3.03375796 -0.56399301
  0.83596584] [1.         1.         1.         0.10374673 0.3402196  1.5822203
 1.        ] 0.0 [3.59339006 2.68189965 3.49608203 1.30618133 3.37397756 1.01822729
 1.83596584] False 

sars', done = [3.59339006 2.68189965 3.49608203 1.30618133 3.37397756 1.01822729
 1.83596584] [ 1.          1.          1.          0.65083982 -2.32382061 -0.91443897
  1.        ] 0.0 [4.59339006 3.68189965 4.49608203 1.95702115 1.05015695 0.10378832
 2.83596584] False 

sars', done = [4.59339006 3.68189965 4.49608203 1.95702115 1.05015695 0.10378832
 2.83596584] [ 1.          1.          1.         -3.01876878  0.88853234  1.28439466
  1.        ] 0.0 [ 5.59339006  4.68189965  5.49608203 -1.06174763  1.93868929  1.38818299
  3.83596584] False 

sars', done = [ 5.59339006  4.68189965  5.49608203 -1.06174763  1.93868929  1.38818299
  3.83596584] [ 1.          1.          1.         -0.11208195  0.81603462  0.2979119
  1.        ] 0.0 [ 6.59339006  5.68189965  6.49608203 -1.17382958  2.7547239   1.68609488
  4.83596584] False 

sars', done = [ 6.59339006  5.68189965  6.49608203 -1.17382958  2.7547239   1.68609488
  4.83596584] [ 1.          1.          1.          0.90577096 -1.29267524 -0.23227264
  1.        ] 0.0 [ 7.59339006  6.68189965  7.49608203 -0.26805862  1.46204866  1.45382224
  5.83596584] False 

sars', done = [ 7.59339006  6.68189965  7.49608203 -0.26805862  1.46204866  1.45382224
  5.83596584] [1.         1.         1.         1.14276482 0.47955959 1.57279604
 1.        ] 0.0 [8.59339006 7.68189965 8.49608203 0.8747062  1.94160825 3.02661828
 6.83596584] False 

sars', done = [8.59339006 7.68189965 8.49608203 0.8747062  1.94160825 3.02661828
 6.83596584] [ 1.          1.          1.         -0.48138651  0.88445119 -1.57803864
  1.        ] 0.0 [9.59339006 8.68189965 9.49608203 0.39331969 2.82605944 1.44857964
 7.83596584] False 

sars', done = [9.59339006 8.68189965 9.49608203 0.39331969 2.82605944 1.44857964
 7.83596584] [1.         1.         1.         1.71473066 1.97910478 0.60001979
 1.        ] 0.0 [10.59339006  9.68189965 10.49608203  2.10805035  4.80516422  2.04859943
  8.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.691850745534255e-16
sars', done = [10.59339006  9.68189965 10.49608203  2.10805035  4.80516422  2.04859943
  8.83596584] [ 1.          1.          1.          0.37751555 -1.76453971  1.09983174
  1.        ] -7.691850745534256e-17 [11.59339006 10.68189965 11.49608203  2.4855659   3.04062452  3.14843117
  9.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.2819204007504074e-07
sars', done = [11.59339006 10.68189965 11.49608203  2.4855659   3.04062452  3.14843117
  9.83596584] [ 1.          1.          1.         -1.51673801 -0.3333629   0.2007682
  1.        ] -2.2819204007504073e-08 [12.59339006 11.68189965 12.49608203  0.96882789  2.70726161  3.34919937
 10.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.538370149106851e-15
sars', done = [12.59339006 11.68189965 12.49608203  0.96882789  2.70726161  3.34919937
 10.83596584] [ 1.          1.          1.         -0.75230432 -0.28857931  0.24440724
  1.        ] -1.5383701491068512e-16 [13.59339006 12.68189965 13.49608203  0.21652357  2.4186823   3.59360661
 11.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.4728772825180593e-15
sars', done = [13.59339006 12.68189965 13.49608203  0.21652357  2.4186823   3.59360661
 11.83596584] [ 1.          1.          1.         -0.56712452 -2.03684039  2.19417387
  1.        ] -1.4728772825180593e-16 [14.59339006 13.68189965 14.49608203 -0.35060095  0.38184191  5.78778048
 12.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.538370149106851e-15
sars', done = [14.59339006 13.68189965 14.49608203 -0.35060095  0.38184191  5.78778048
 12.83596584] [ 1.          1.          1.         -0.33037524  0.0688435   0.60774895
  1.        ] -1.5383701491068512e-16 [15.59339006 14.68189965 15.49608203 -0.68097619  0.45068541  6.39552943
 13.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.1920928955078125e-07
sars', done = [15.59339006 14.68189965 15.49608203 -0.68097619  0.45068541  6.39552943
 13.83596584] [ 1.          1.          1.         -0.68600109  0.85305204 -0.88452913
  1.        ] -1.1920928955078126e-08 [16.59339006 15.68189965 16.49608203 -1.36697729  1.30373745  5.5110003
 14.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.1920928955078125e-07
sars', done = [16.59339006 15.68189965 16.49608203 -1.36697729  1.30373745  5.5110003
 14.83596584] [ 1.          1.          1.          0.7773011  -0.03660248 -1.14316333
  1.        ] -1.1920928955078126e-08 [17.59339006 16.68189965 17.49608203 -0.58967618  1.26713497  4.36783697
 15.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.0647654777451293e-07
sars', done = [17.59339006 16.68189965 17.49608203 -0.58967618  1.26713497  4.36783697
 15.83596584] [ 1.          1.          1.         -0.62919851 -1.15534738  0.42745897
  1.        ] -2.064765477745129e-08 [18.59339006 17.68189965 18.49608203 -1.2188747   0.11178759  4.79529595
 16.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.538370149106851e-15
sars', done = [18.59339006 17.68189965 18.49608203 -1.2188747   0.11178759  4.79529595
 16.83596584] [ 1.          1.          1.          0.5186156  -2.28451809 -0.77201135
  1.        ] -1.5383701491068512e-16 [19.59339006 18.68189965 19.49608203 -0.7002591  -2.1727305   4.02328459
 17.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.615110447320553e-15
sars', done = [19.59339006 18.68189965 19.49608203 -0.7002591  -2.1727305   4.02328459
 17.83596584] [ 1.          1.          1.          1.19596041 -1.12501187  0.78266661
  1.        ] -4.615110447320553e-16 [20.59339006 19.68189965 20.49608203  0.49570131 -3.29774237  4.80595121
 18.83596584] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.351167857633659e-15
sars', done = [20.59339006 19.68189965 20.49608203  0.49570131 -3.29774237  4.80595121
 18.83596584] [ 1.          1.          1.          0.61811107 -0.25742961  2.19110501
  1.        ] -4.351167857633659e-16 [21.59339006 20.68189965 21.49608203  1.11381238 -3.55517198  6.99705622
 19.83596584] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -6.730871827745673e-08 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.76406872 -0.29131992 -0.60891991  1.8963932  -1.16305124  0.5513001
  1.19679292]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [ 1.59339006  0.68189965  1.49608203  0.19183192  2.53644409 -0.33852992
 -0.16403416]
self.augmented_state, len [[nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], array([ 1.59339006,  0.68189965,  1.49608203,  0.19183192,  2.53644409,
       -0.33852992, -0.16403416])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 7, 'action_space_dim': 7, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [0, 1, 2, 6], 'action_space_relevant_indices': [0, 1, 2, 6]}
sars', done = [ 1.59339006  0.68189965  1.49608203  0.19183192  2.53644409 -0.33852992
 -0.16403416] [-1.02602039 -0.03453188  1.20080602  1.          1.          1.
  2.59784336] 0.0 [0.56736967 0.64736777 2.69688805 1.19183192 3.53644409 0.66147008
 2.43380921] False 

sars', done = [0.56736967 0.64736777 2.69688805 1.19183192 3.53644409 0.66147008
 2.43380921] [-0.06796953  0.80844683 -0.87541567  1.          1.          1.
  0.03301895] 0.0 [0.49940014 1.4558146  1.82147238 2.19183192 4.53644409 1.66147008
 2.46682816] False 

sars', done = [0.49940014 1.4558146  1.82147238 2.19183192 4.53644409 1.66147008
 2.46682816] [ 0.59522292  0.23698326 -1.96338282  1.          1.          1.
  1.08422905] 0.0 [ 1.09462306  1.69279786 -0.14191043  3.19183192  5.53644409  2.66147008
  3.55105721] False 

sars', done = [ 1.09462306  1.69279786 -0.14191043  3.19183192  5.53644409  2.66147008
  3.55105721] [ 1.68142203 -0.88418494 -1.1662234   1.          1.          1.
 -0.28783456] 0.0 [ 2.77604509  0.80861292 -1.30813383  4.19183192  6.53644409  3.66147008
  3.26322265] False 

sars', done = [ 2.77604509  0.80861292 -1.30813383  4.19183192  6.53644409  3.66147008
  3.26322265] [-0.94472334 -0.76036033 -1.92269503  1.          1.          1.
  1.21736607] 0.0 [ 1.83132175  0.04825259 -3.23082886  5.19183192  7.53644409  4.66147008
  4.48058871] False 

sars', done = [ 1.83132175  0.04825259 -3.23082886  5.19183192  7.53644409  4.66147008
  4.48058871] [ 0.18881707 -0.22381054 -1.06304026  1.          1.          1.
 -0.3016275 ] 0.0 [ 2.02013882 -0.17555795 -4.29386913  6.19183192  8.53644409  5.66147008
  4.17896121] False 

sars', done = [ 2.02013882 -0.17555795 -4.29386913  6.19183192  8.53644409  5.66147008
  4.17896121] [ 0.22405119 -0.81747557 -2.80103056  1.          1.          1.
  0.58341643] 0.0 [ 2.24419001 -0.99303352 -7.09489968  7.19183192  9.53644409  6.66147008
  4.76237765] False 

sars', done = [ 2.24419001 -0.99303352 -7.09489968  7.19183192  9.53644409  6.66147008
  4.76237765] [-0.26893996 -0.55437416  0.82444369  1.          1.          1.
 -1.15638961] 0.0 [ 1.97525005 -1.54740768 -6.27045599  8.19183192 10.53644409  7.66147008
  3.60598804] False 

sars', done = [ 1.97525005 -1.54740768 -6.27045599  8.19183192 10.53644409  7.66147008
  3.60598804] [-1.10518036e-04 -2.99463719e-01  6.32880506e-01  1.00000000e+00
  1.00000000e+00  1.00000000e+00  8.23125198e-01] 0.0 [ 1.97513953 -1.84687139 -5.63757549  9.19183192 11.53644409  8.66147008
  4.42911323] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 8.147525501413508
sars', done = [ 1.97513953 -1.84687139 -5.63757549  9.19183192 11.53644409  8.66147008
  4.42911323] [ 3.38689219e-02 -8.11410186e-04 -1.94723737e-01  1.00000000e+00
  1.00000000e+00  1.00000000e+00  1.06333534e-01] -0.8147525501413508 [ 2.00900846 -1.8476828  -5.83229922 10.19183192 12.53644409  9.66147008
  4.53544677] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 8.349650131328271
sars', done = [ 2.00900846 -1.8476828  -5.83229922 10.19183192 12.53644409  9.66147008
  4.53544677] [-0.93832105  0.8614474  -0.10532601  1.          1.          1.
 -1.35194226] -0.8349650131328271 [ 1.07068741 -0.9862354  -5.93762524 11.19183192 13.53644409 10.66147008
  3.18350451] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 8.390755138118704
sars', done = [ 1.07068741 -0.9862354  -5.93762524 11.19183192 13.53644409 10.66147008
  3.18350451] [ 1.65787554  0.12053753  1.07072656  1.          1.          1.
 -0.25715528] -0.8390755138118704 [ 2.72856294 -0.86569787 -4.86689868 12.19183192 14.53644409 11.66147008
  2.92634922] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 10.791636083292227
sars', done = [ 2.72856294 -0.86569787 -4.86689868 12.19183192 14.53644409 11.66147008
  2.92634922] [ 1.53862897  0.86473286 -1.02360975  1.          1.          1.
 -1.38528352] -1.0791636083292226 [ 4.26719191e+00 -9.65018434e-04 -5.89050843e+00  1.31918319e+01
  1.55364441e+01  1.26614701e+01  1.54106570e+00] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.72826241745032
sars', done = [ 4.26719191e+00 -9.65018434e-04 -5.89050843e+00  1.31918319e+01
  1.55364441e+01  1.26614701e+01  1.54106570e+00] [-2.01398741  0.26350018  1.22434714  1.          1.          1.
  0.11223001] -1.1728262417450321 [ 2.25320451  0.26253517 -4.66616129 14.19183192 16.53644409 13.66147008
  1.65329571] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 9.905619373688769
sars', done = [ 2.25320451  0.26253517 -4.66616129 14.19183192 16.53644409 13.66147008
  1.65329571] [-0.55906303 -0.57123044  0.36829411  1.          1.          1.
  0.15373268] -0.9905619373688769 [ 1.69414147 -0.30869527 -4.29786719 15.19183192 17.53644409 14.66147008
  1.8070284 ] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 9.931131559342594
sars', done = [ 1.69414147 -0.30869527 -4.29786719 15.19183192 17.53644409 14.66147008
  1.8070284 ] [ 0.21729136 -1.24458729  0.67626323  1.          1.          1.
 -0.71651782] -0.9931131559342594 [ 1.91143283 -1.55328256 -3.62160396 16.19183192 18.53644409 15.66147008
  1.09051058] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 10.297536100588355
sars', done = [ 1.91143283 -1.55328256 -3.62160396 16.19183192 18.53644409 15.66147008
  1.09051058] [-0.41986481 -0.83159491 -1.1479884   1.          1.          1.
  1.51001868] -1.0297536100588354 [ 1.49156802 -2.38487747 -4.76959235 17.19183192 19.53644409 16.66147008
  2.60052926] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 10.74116724006315
sars', done = [ 1.49156802 -2.38487747 -4.76959235 17.19183192 19.53644409 16.66147008
  2.60052926] [ 0.54984364 -0.36052964 -0.932462    1.          1.          1.
  0.94002202] -1.074116724006315 [ 2.04141166 -2.74540712 -5.70205436 18.19183192 20.53644409 17.66147008
  3.54055128] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.0014138846148
sars', done = [ 2.04141166 -2.74540712 -5.70205436 18.19183192 20.53644409 17.66147008
  3.54055128] [-0.9232366   1.05897526  0.26787202  1.          1.          1.
  0.56180965] -1.1001413884614801 [ 1.11817507 -1.68643185 -5.43418234 19.19183192 21.53644409 18.66147008
  4.10236094] False 

uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 11.334807189016606
sars', done = [ 1.11817507 -1.68643185 -5.43418234 19.19183192 21.53644409 18.66147008
  4.10236094] [-0.39651885 -1.06724275  0.46442082  1.          1.          1.
 -1.54413969] -1.1334807189016607 [ 0.72165621 -2.7536746  -4.96976152 20.19183192 22.53644409 19.66147008
  2.55822125] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -11.061950461891731 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.76406872 -0.29131992 -0.60891991  1.8963932  -1.16305124  0.5513001
  1.19679292]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.92834036  2.16924632 -4.88226269  2.80702663  0.36006653  2.80813054
 -0.12869191]
self.augmented_state, len [[nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], array([ 0.92834036,  2.16924632, -4.88226269,  2.80702663,  0.36006653,
        2.80813054, -0.12869191])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 7, 'action_space_dim': 7, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [0, 1, 2, 6], 'action_space_relevant_indices': [0, 1, 2, 6], 'state_space_max': 5, 'action_space_max': 1}
next_state out of bounds. next_state, clipping to [-0.07165964  1.16924632 -5.88226269  1.80702663 -0.63993347  1.80813054
 -1.12869191] [-0.07165964  1.16924632 -5.          1.80702663 -0.63993347  1.80813054
 -1.12869191]
sars', done = [ 0.92834036  2.16924632 -4.88226269  2.80702663  0.36006653  2.80813054
 -0.12869191] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-0.07165964  1.16924632 -5.          1.80702663 -0.63993347  1.80813054
 -1.12869191] False 

next_state out of bounds. next_state, clipping to [-1.07165964  0.16924632 -6.          0.80702663 -1.63993347  0.80813054
 -2.12869191] [-1.07165964  0.16924632 -5.          0.80702663 -1.63993347  0.80813054
 -2.12869191]
sars', done = [-0.07165964  1.16924632 -5.          1.80702663 -0.63993347  1.80813054
 -1.12869191] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-1.07165964  0.16924632 -5.          0.80702663 -1.63993347  0.80813054
 -2.12869191] False 

next_state out of bounds. next_state, clipping to [-2.07165964 -0.83075368 -6.         -0.19297337 -2.63993347 -0.19186946
 -3.12869191] [-2.07165964 -0.83075368 -5.         -0.19297337 -2.63993347 -0.19186946
 -3.12869191]
sars', done = [-1.07165964  0.16924632 -5.          0.80702663 -1.63993347  0.80813054
 -2.12869191] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-2.07165964 -0.83075368 -5.         -0.19297337 -2.63993347 -0.19186946
 -3.12869191] False 

next_state out of bounds. next_state, clipping to [-3.07165964 -1.83075368 -6.         -1.19297337 -3.63993347 -1.19186946
 -4.12869191] [-3.07165964 -1.83075368 -5.         -1.19297337 -3.63993347 -1.19186946
 -4.12869191]
sars', done = [-2.07165964 -0.83075368 -5.         -0.19297337 -2.63993347 -0.19186946
 -3.12869191] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-3.07165964 -1.83075368 -5.         -1.19297337 -3.63993347 -1.19186946
 -4.12869191] False 

next_state out of bounds. next_state, clipping to [-4.07165964 -2.83075368 -6.         -2.19297337 -4.63993347 -2.19186946
 -5.12869191] [-4.07165964 -2.83075368 -5.         -2.19297337 -4.63993347 -2.19186946
 -5.        ]
sars', done = [-3.07165964 -1.83075368 -5.         -1.19297337 -3.63993347 -1.19186946
 -4.12869191] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-4.07165964 -2.83075368 -5.         -2.19297337 -4.63993347 -2.19186946
 -5.        ] False 

next_state out of bounds. next_state, clipping to [-5.07165964 -3.83075368 -6.         -3.19297337 -5.63993347 -3.19186946
 -6.        ] [-5.         -3.83075368 -5.         -3.19297337 -5.         -3.19186946
 -5.        ]
sars', done = [-4.07165964 -2.83075368 -5.         -2.19297337 -4.63993347 -2.19186946
 -5.        ] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5.         -3.83075368 -5.         -3.19297337 -5.         -3.19186946
 -5.        ] False 

next_state out of bounds. next_state, clipping to [-6.         -4.83075368 -6.         -4.19297337 -6.         -4.19186946
 -6.        ] [-5.         -4.83075368 -5.         -4.19297337 -5.         -4.19186946
 -5.        ]
sars', done = [-5.         -3.83075368 -5.         -3.19297337 -5.         -3.19186946
 -5.        ] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5.         -4.83075368 -5.         -4.19297337 -5.         -4.19186946
 -5.        ] False 

next_state out of bounds. next_state, clipping to [-6.         -5.83075368 -6.         -5.19297337 -6.         -5.19186946
 -6.        ] [-5. -5. -5. -5. -5. -5. -5.]
sars', done = [-5.         -4.83075368 -5.         -4.19297337 -5.         -4.19186946
 -5.        ] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 4.020362086756104
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] -0.4020362086756104 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 3.414691190205329
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] -0.3414691190205329 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.688511198235743
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] -0.2688511198235743 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.7660370431855101
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] -0.17660370431855102 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.7799904750302598
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] -0.07799904750302597 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

next_state out of bounds. next_state, clipping to [-6. -6. -6. -6. -6. -6. -6.] [-5. -5. -5. -5. -5. -5. -5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [-5. -5. -5. -5. -5. -5. -5.] [-1 -1 -1 -1 -1 -1 -1] 0.0 [-5. -5. -5. -5. -5. -5. -5.] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -1.2669591993412945 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.96422742 -4.17263562 -4.71264267 -4.19641802 -0.90090835 -4.02478309
 -1.92553976]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
self.term_spaces samples: [ 0.48270042  2.63463726 -4.74957174 -0.33867457] [ 2.51858748 -1.70724468 -2.57995172 -0.13552242]
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
A state was sampled in term state subspace. Therefore, resampling. State was, subspace was: [ 0.92834036  2.16924632 -4.88226269  2.80702663  0.36006653  2.80813054
 -0.12869191] 0
RESET called. State reset to: [ 0.96422742 -4.17263562 -4.71264267 -4.19641802 -0.90090835 -4.02478309
 -1.92553976]
self.augmented_state, len [[nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], array([ 0.96422742, -4.17263562, -4.71264267, -4.19641802, -0.90090835,
       -4.02478309, -1.92553976])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 7, 'action_space_dim': 7, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [0, 1, 2, 6], 'action_space_relevant_indices': [0, 1, 2, 6], 'state_space_max': 5, 'action_space_max': 1, 'terminal_states': [[0.92834036, 2.16924632, -4.88226269, -0.12869191], [2.96422742, -2.17263562, -2.71264267, 0.07446024]], 'term_state_edge': 1.0}
sars', done = [ 0.96422742 -4.17263562 -4.71264267 -4.19641802 -0.90090835 -4.02478309
 -1.92553976] [1 1 1 1 1 1 1] 0.0 [ 1.96422742 -3.17263562 -3.71264267 -3.19641802  0.09909165 -3.02478309
 -0.92553976] False 

sars', done = [ 1.96422742 -3.17263562 -3.71264267 -3.19641802  0.09909165 -3.02478309
 -0.92553976] [1 1 1 1 1 1 1] 0.0 [ 2.96422742 -2.17263562 -2.71264267 -2.19641802  1.09909165 -2.02478309
  0.07446024] True 

sars', done = [ 2.96422742 -2.17263562 -2.71264267 -2.19641802  1.09909165 -2.02478309
  0.07446024] [1 1 1 1 1 1 1] 0.0 [ 3.96422742 -1.17263562 -1.71264267 -1.19641802  2.09909165 -1.02478309
  1.07446024] False 

sars', done = [ 3.96422742 -1.17263562 -1.71264267 -1.19641802  2.09909165 -1.02478309
  1.07446024] [1 1 1 1 1 1 1] 0.0 [ 4.96422742 -0.17263562 -0.71264267 -0.19641802  3.09909165 -0.02478309
  2.07446024] False 

next_state out of bounds. next_state, clipping to [5.96422742 0.82736438 0.28735733 0.80358198 4.09909165 0.97521691
 3.07446024] [5.         0.82736438 0.28735733 0.80358198 4.09909165 0.97521691
 3.07446024]
sars', done = [ 4.96422742 -0.17263562 -0.71264267 -0.19641802  3.09909165 -0.02478309
  2.07446024] [1 1 1 1 1 1 1] 0.0 [5.         0.82736438 0.28735733 0.80358198 4.09909165 0.97521691
 3.07446024] False 

next_state out of bounds. next_state, clipping to [6.         1.82736438 1.28735733 1.80358198 5.09909165 1.97521691
 4.07446024] [5.         1.82736438 1.28735733 1.80358198 5.         1.97521691
 4.07446024]
sars', done = [5.         0.82736438 0.28735733 0.80358198 4.09909165 0.97521691
 3.07446024] [1 1 1 1 1 1 1] 0.0 [5.         1.82736438 1.28735733 1.80358198 5.         1.97521691
 4.07446024] False 

next_state out of bounds. next_state, clipping to [6.         2.82736438 2.28735733 2.80358198 6.         2.97521691
 5.07446024] [5.         2.82736438 2.28735733 2.80358198 5.         2.97521691
 5.        ]
sars', done = [5.         1.82736438 1.28735733 1.80358198 5.         1.97521691
 4.07446024] [1 1 1 1 1 1 1] 0.0 [5.         2.82736438 2.28735733 2.80358198 5.         2.97521691
 5.        ] False 

next_state out of bounds. next_state, clipping to [6.         3.82736438 3.28735733 3.80358198 6.         3.97521691
 6.        ] [5.         3.82736438 3.28735733 3.80358198 5.         3.97521691
 5.        ]
sars', done = [5.         2.82736438 2.28735733 2.80358198 5.         2.97521691
 5.        ] [1 1 1 1 1 1 1] 0.0 [5.         3.82736438 3.28735733 3.80358198 5.         3.97521691
 5.        ] False 

next_state out of bounds. next_state, clipping to [6.         4.82736438 4.28735733 4.80358198 6.         4.97521691
 6.        ] [5.         4.82736438 4.28735733 4.80358198 5.         4.97521691
 5.        ]
sars', done = [5.         3.82736438 3.28735733 3.80358198 5.         3.97521691
 5.        ] [1 1 1 1 1 1 1] 0.0 [5.         4.82736438 4.28735733 4.80358198 5.         4.97521691
 5.        ] False 

next_state out of bounds. next_state, clipping to [6.         5.82736438 5.28735733 5.80358198 6.         5.97521691
 6.        ] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 7.123529204582806
sars', done = [5.         4.82736438 4.28735733 4.80358198 5.         4.97521691
 5.        ] [1 1 1 1 1 1 1] -0.7123529204582806 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 6.3429246989783445
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.6342924698978345 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 5.047133481976011
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.504713348197601 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 3.7067434391157996
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.37067434391157994 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 2.7321132885917967
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.27321132885917965 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 1.712064711663765
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.1712064711663765 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.6903112927635441
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.06903112927635441 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.4460981094858605
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] -0.04460981094858605 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] 0.0 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] 0.0 [5. 5. 5. 5. 5. 5. 5.] False 

next_state out of bounds. next_state, clipping to [6. 6. 6. 6. 6. 6. 6.] [5. 5. 5. 5. 5. 5. 5.]
uu.shape, dd.shape, vv.shape = (10, 10) (4,) (4, 4)
total_dist of pts from fit line: 0.0
sars', done = [5. 5. 5. 5. 5. 5. 5.] [1 1 1 1 1 1 1] 0.0 [5. 5. 5. 5. 5. 5. 5.] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 -2.7800918227157925 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.75854262  1.23682862  2.94220605  1.35532093  2.67297672  2.55933763
  1.57803874]
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
self.term_spaces samples: [ 0.48270042  2.63463726 -4.74957174 -0.33867457] [ 2.51858748 -1.70724468 -2.57995172 -0.13552242]
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
A state was sampled in term state subspace. Therefore, resampling. State was, subspace was: [ 0.92834036  2.16924632 -4.88226269  2.80702663  0.36006653  2.80813054
 -0.12869191] 0
RESET called. State reset to: [ 0.96422742 -4.17263562 -4.71264267 -4.19641802 -0.90090835 -4.02478309
 -1.92553976]
self.augmented_state, len [[nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan, nan, nan], array([ 0.96422742, -4.17263562, -4.71264267, -4.19641802, -0.90090835,
       -4.02478309, -1.92553976])] 11
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 7, 'action_space_dim': 7, 'transition_dynamics_order': 1, 'inertia': 1, 'time_unit': 1, 'delay': 0, 'sequence_length': 10, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [0, 1, 2, 6], 'action_space_relevant_indices': [0, 1, 2, 6], 'state_space_max': 5, 'action_space_max': 1, 'terminal_states': [[0.92834036, 2.16924632, -4.88226269, -0.12869191], [2.96422742, -2.17263562, -2.71264267, 0.07446024]], 'term_state_edge': 1.0, 'transition_noise': <function TestRLToyEnv.test_continuous_dynamics.<locals>.<lambda> at 0x7fa658adcbf8>}
sars', done = [ 0.96422742 -4.17263562 -4.71264267 -4.19641802 -0.90090835 -4.02478309
 -1.92553976] [1 1 1 1 1 1 1] 0.0 [ 1.25715391 -2.72582608 -3.56190734 -3.5426217   0.90596197 -3.53510777
 -0.90385213] False 

sars', done = [ 1.25715391 -2.72582608 -3.56190734 -3.5426217   0.90596197 -3.53510777
 -0.90385213] [1 1 1 1 1 1 1] 0.0 [ 1.90342939 -0.6251458  -2.87656563 -2.48317271  2.03932642 -2.08032816
  0.04361135] False 

sars', done = [ 1.90342939 -0.6251458  -2.87656563 -2.48317271  2.03932642 -2.08032816
  0.04361135] [1 1 1 1 1 1 1] 0.0 [ 3.77936892  0.04741981 -1.71519289 -1.28301072  2.80375652 -0.92779405
  0.18543041] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 [1.93673756 1.8749242  0.62676637 0.60581466 1.17580467 1.1176384
 0.93240509] 0.0 0 3
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.75854262  1.23682862  2.94220605  1.35532093  2.67297672  2.55933763
  1.57803874]
[32;1;4mTEST_CONTINUOUS_DYNAMICS_ORDER[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'state_space': 10, 'action_space': 11}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [1.59339006 0.68189965]
self.augmented_state, len [[nan, nan], [nan, nan], [nan, nan], array([1.59339006, 0.68189965])] 4
toy env instantiated with config: {'seed': {'env': 0, 'state_space': 10, 'action_space': 11}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 2, 'action_space_dim': 2, 'transition_dynamics_order': 3, 'inertia': 2.0, 'time_unit': 0.01, 'delay': 0, 'sequence_length': 3, 'reward_scale': 1.0, 'reward_function': 'move_along_a_line', 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 2), 'action_space_relevant_indices': range(0, 2)}
sars', done = [1.59339006 0.68189965] [2. 1.] 0.0 [1.59339023 0.68189973] False 

sars', done = [1.59339023 0.68189973] [2. 1.] 0.0 [1.59339139 0.68190032] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 0.0 0 2
#TODO for cont. spaces: reset
RESET called. State reset to: [1.49608203 0.19183192]
[32;1;4mTEST_CONTINUOUS_DYNAMICS_TARGET_POINT_DENSE[0m
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003]
self.augmented_state, len [[nan, nan], array([-0.79792045,  1.21012003])] 2
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 2, 'action_space_dim': 2, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 0, 'sequence_length': 1, 'reward_scale': 1.0, 'reward_function': 'move_to_a_point', 'target_point': array([-0.29792,  1.71012]), 'make_denser': True, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': range(0, 2), 'action_space_relevant_indices': range(0, 2)}
sars', done = [-0.79792045  1.21012003] [0.5 0.5] 0.03535533905932309 [-0.77292045  1.23512003] False 

sars', done = [-0.77292045  1.23512003] [0.5 0.5] 0.035355339059322644 [-0.74792045  1.26012003] False 

sars', done = [-0.74792045  1.26012003] [0.5 0.5] 0.03535533905932198 [-0.72292045  1.28512003] False 

sars', done = [-0.72292045  1.28512003] [0.5 0.5] 0.03535533905932131 [-0.69792045  1.31012003] False 

sars', done = [-0.69792045  1.31012003] [0.5 0.5] 0.035355339059320645 [-0.67292045  1.33512003] False 

sars', done = [-0.67292045  1.33512003] [0.5 0.5] 0.03535533905931959 [-0.64792045  1.36012003] False 

sars', done = [-0.64792045  1.36012003] [0.5 0.5] 0.03535533905931837 [-0.62292045  1.38512003] False 

sars', done = [-0.62292045  1.38512003] [0.5 0.5] 0.03535533905931698 [-0.59792045  1.41012003] False 

sars', done = [-0.59792045  1.41012003] [0.5 0.5] 0.03535533905931504 [-0.57292045  1.43512003] False 

sars', done = [-0.57292045  1.43512003] [0.5 0.5] 0.035355339059312596 [-0.54792045  1.46012003] False 

sars', done = [-0.54792045  1.46012003] [0.5 0.5] 0.03535533905930932 [-0.52292045  1.48512003] False 

sars', done = [-0.52292045  1.48512003] [0.5 0.5] 0.03535533905930477 [-0.49792045  1.51012003] False 

sars', done = [-0.49792045  1.51012003] [0.5 0.5] 0.035355339059298385 [-0.47292045  1.53512003] False 

sars', done = [-0.47292045  1.53512003] [0.5 0.5] 0.03535533905928867 [-0.44792045  1.56012003] False 

sars', done = [-0.44792045  1.56012003] [0.5 0.5] 0.035355339059273294 [-0.42292045  1.58512003] False 

sars', done = [-0.42292045  1.58512003] [0.5 0.5] 0.03535533905924623 [-0.39792045  1.61012003] False 

sars', done = [-0.39792045  1.61012003] [0.5 0.5] 0.035355339059192165 [-0.37292045  1.63512003] False 

sars', done = [-0.37292045  1.63512003] [0.5 0.5] 0.03535533905905702 [-0.34792045  1.66012003] False 

sars', done = [-0.34792045  1.66012003] [0.5 0.5] 0.035355339058516386 [-0.32292045  1.68512003] False 

sars', done = [-0.32292045  1.68512003] [0.5 0.5] 0.03535518428294074 [-0.29792045  1.71012003] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 0.7071066264086192 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.44190558 -0.53462555]
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591]
self.augmented_state, len [[nan, nan, nan, nan, nan], array([-0.79792045,  1.21012003,  0.44190558, -0.53462555, -0.00606591])] 2
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 5, 'action_space_dim': 5, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 0, 'sequence_length': 1, 'reward_scale': 1.0, 'reward_function': 'move_to_a_point', 'target_point': array([1.71012 , 0.941906]), 'make_denser': True, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [1, 2], 'action_space_relevant_indices': [1, 2]}
sars', done = [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932342 [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] False 

sars', done = [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932331 [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] False 

sars', done = [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059322644 [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] False 

sars', done = [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932209 [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] False 

sars', done = [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932142 [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] False 

sars', done = [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059320534 [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] False 

sars', done = [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931948 [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] False 

sars', done = [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931826 [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] False 

sars', done = [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931659 [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] False 

sars', done = [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931437 [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] False 

sars', done = [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] [0.5 0.5 0.5 0.5 0.5] 0.0353553390593116 [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] False 

sars', done = [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] [0.5 0.5 0.5 0.5 0.5] 0.0353553390593076 [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] False 

sars', done = [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905930199 [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] False 

sars', done = [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] [0.5 0.5 0.5 0.5 0.5] 0.0353553390592935 [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] False 

sars', done = [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905928001 [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] False 

sars', done = [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059256335 [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] False 

sars', done = [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905920901 [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] False 

sars', done = [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059090676 [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] False 

sars', done = [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905861741 [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] False 

sars', done = [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] [0.5 0.5 0.5 0.5 0.5] 0.03535519322459993 [-0.29792045  1.71012003  0.94190558 -0.03462555  0.49393409] False 

sars', done = [-0.29792045  1.71012003  0.94190558 -0.03462555  0.49393409] [0.5 0.5 0.5 0.5 0.5] -0.03535465062139076 [-0.27292045  1.73512003  0.96690558 -0.00962555  0.51893409] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 0.6717519847290796 0 21
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.66707688 -2.03656313  0.1048439  -1.39285609  0.15490248]
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591]
self.augmented_state, len [[nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], array([-0.79792045,  1.21012003,  0.44190558, -0.53462555, -0.00606591])] 12
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 5, 'action_space_dim': 5, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 10, 'sequence_length': 1, 'reward_scale': 1.0, 'reward_function': 'move_to_a_point', 'target_point': array([1.71012 , 0.941906]), 'make_denser': True, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'reward_unit': 1.0, 'state_space_relevant_indices': [1, 2], 'action_space_relevant_indices': [1, 2]}
sars', done = [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] False 

sars', done = [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] False 

sars', done = [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] False 

sars', done = [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] False 

sars', done = [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] False 

sars', done = [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] False 

sars', done = [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] False 

sars', done = [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] False 

sars', done = [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] False 

sars', done = [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] False 

sars', done = [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932342 [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] False 

sars', done = [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932331 [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] False 

sars', done = [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059322644 [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] False 

sars', done = [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932209 [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] False 

sars', done = [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905932142 [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] False 

sars', done = [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] [0.5 0.5 0.5 0.5 0.5] 0.035355339059320534 [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] False 

sars', done = [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931948 [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] False 

sars', done = [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931826 [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] False 

sars', done = [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931659 [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] False 

sars', done = [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] [0.5 0.5 0.5 0.5 0.5] 0.03535533905931437 [-0.29792045  1.71012003  0.94190558 -0.03462555  0.49393409] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 0.3535533905932021 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.66707688 -2.03656313  0.1048439  -1.39285609  0.15490248]
[32;1;4mTEST_CONTINUOUS_DYNAMICS_TARGET_POINT_SPARSE[0m
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003]
self.augmented_state, len [[nan, nan], array([-0.79792045,  1.21012003])] 2
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 2, 'action_space_dim': 2, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 0, 'sequence_length': 1, 'reward_function': 'move_to_a_point', 'make_denser': False, 'target_point': array([-0.29792,  1.71012]), 'target_radius': 0.072, 'reward_unit': 2.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 2), 'action_space_relevant_indices': range(0, 2)}
sars', done = [-0.79792045  1.21012003] [0.5 0.5] 0.0 [-0.77292045  1.23512003] False 

sars', done = [-0.77292045  1.23512003] [0.5 0.5] 0.0 [-0.74792045  1.26012003] False 

sars', done = [-0.74792045  1.26012003] [0.5 0.5] 0.0 [-0.72292045  1.28512003] False 

sars', done = [-0.72292045  1.28512003] [0.5 0.5] 0.0 [-0.69792045  1.31012003] False 

sars', done = [-0.69792045  1.31012003] [0.5 0.5] 0.0 [-0.67292045  1.33512003] False 

sars', done = [-0.67292045  1.33512003] [0.5 0.5] 0.0 [-0.64792045  1.36012003] False 

sars', done = [-0.64792045  1.36012003] [0.5 0.5] 0.0 [-0.62292045  1.38512003] False 

sars', done = [-0.62292045  1.38512003] [0.5 0.5] 0.0 [-0.59792045  1.41012003] False 

sars', done = [-0.59792045  1.41012003] [0.5 0.5] 0.0 [-0.57292045  1.43512003] False 

sars', done = [-0.57292045  1.43512003] [0.5 0.5] 0.0 [-0.54792045  1.46012003] False 

sars', done = [-0.54792045  1.46012003] [0.5 0.5] 0.0 [-0.52292045  1.48512003] False 

sars', done = [-0.52292045  1.48512003] [0.5 0.5] 0.0 [-0.49792045  1.51012003] False 

sars', done = [-0.49792045  1.51012003] [0.5 0.5] 0.0 [-0.47292045  1.53512003] False 

sars', done = [-0.47292045  1.53512003] [0.5 0.5] 0.0 [-0.44792045  1.56012003] False 

sars', done = [-0.44792045  1.56012003] [0.5 0.5] 0.0 [-0.42292045  1.58512003] False 

sars', done = [-0.42292045  1.58512003] [0.5 0.5] 0.0 [-0.39792045  1.61012003] False 

sars', done = [-0.39792045  1.61012003] [0.5 0.5] 0.0 [-0.37292045  1.63512003] False 

sars', done = [-0.37292045  1.63512003] [0.5 0.5] 2.0 [-0.34792045  1.66012003] False 

sars', done = [-0.34792045  1.66012003] [0.5 0.5] 2.0 [-0.32292045  1.68512003] False 

sars', done = [-0.32292045  1.68512003] [0.5 0.5] 2.0 [-0.29792045  1.71012003] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 6.0 0 20
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.44190558 -0.53462555]
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003]
self.augmented_state, len [[nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], [nan, nan], array([-0.79792045,  1.21012003])] 12
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 2, 'action_space_dim': 2, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 10, 'sequence_length': 1, 'reward_function': 'move_to_a_point', 'make_denser': False, 'target_point': array([-0.29792,  1.71012]), 'target_radius': 0.072, 'reward_unit': 2.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 2), 'action_space_relevant_indices': range(0, 2)}
sars', done = [-0.79792045  1.21012003] [0.5 0.5] 0.0 [-0.77292045  1.23512003] False 

sars', done = [-0.77292045  1.23512003] [0.5 0.5] 0.0 [-0.74792045  1.26012003] False 

sars', done = [-0.74792045  1.26012003] [0.5 0.5] 0.0 [-0.72292045  1.28512003] False 

sars', done = [-0.72292045  1.28512003] [0.5 0.5] 0.0 [-0.69792045  1.31012003] False 

sars', done = [-0.69792045  1.31012003] [0.5 0.5] 0.0 [-0.67292045  1.33512003] False 

sars', done = [-0.67292045  1.33512003] [0.5 0.5] 0.0 [-0.64792045  1.36012003] False 

sars', done = [-0.64792045  1.36012003] [0.5 0.5] 0.0 [-0.62292045  1.38512003] False 

sars', done = [-0.62292045  1.38512003] [0.5 0.5] 0.0 [-0.59792045  1.41012003] False 

sars', done = [-0.59792045  1.41012003] [0.5 0.5] 0.0 [-0.57292045  1.43512003] False 

sars', done = [-0.57292045  1.43512003] [0.5 0.5] 0.0 [-0.54792045  1.46012003] False 

sars', done = [-0.54792045  1.46012003] [0.5 0.5] 0.0 [-0.52292045  1.48512003] False 

sars', done = [-0.52292045  1.48512003] [0.5 0.5] 0.0 [-0.49792045  1.51012003] False 

sars', done = [-0.49792045  1.51012003] [0.5 0.5] 0.0 [-0.47292045  1.53512003] False 

sars', done = [-0.47292045  1.53512003] [0.5 0.5] 0.0 [-0.44792045  1.56012003] False 

sars', done = [-0.44792045  1.56012003] [0.5 0.5] 0.0 [-0.42292045  1.58512003] False 

sars', done = [-0.42292045  1.58512003] [0.5 0.5] 0.0 [-0.39792045  1.61012003] False 

sars', done = [-0.39792045  1.61012003] [0.5 0.5] 0.0 [-0.37292045  1.63512003] False 

sars', done = [-0.37292045  1.63512003] [0.5 0.5] 0.0 [-0.34792045  1.66012003] False 

sars', done = [-0.34792045  1.66012003] [0.5 0.5] 0.0 [-0.32292045  1.68512003] False 

sars', done = [-0.32292045  1.68512003] [0.5 0.5] 0.0 [-0.29792045  1.71012003] False 

sars', done = [-0.29792045  1.71012003] [0.5 0.5] 0.0 [-0.27292045  1.73512003] False 

sars', done = [-0.27292045  1.73512003] [0.5 0.5] 0.0 [-0.24792045  1.76012003] False 

sars', done = [-0.24792045  1.76012003] [0.5 0.5] 0.0 [-0.22292045  1.78512003] False 

sars', done = [-0.22292045  1.78512003] [0.5 0.5] 0.0 [-0.19792045  1.81012003] False 

sars', done = [-0.19792045  1.81012003] [0.5 0.5] 0.0 [-0.17292045  1.83512003] False 

sars', done = [-0.17292045  1.83512003] [0.5 0.5] 0.0 [-0.14792045  1.86012003] False 

sars', done = [-0.14792045  1.86012003] [0.5 0.5] 0.0 [-0.12292045  1.88512003] False 

sars', done = [-0.12292045  1.88512003] [0.5 0.5] 2.0 [-0.09792045  1.91012003] False 

sars', done = [-0.09792045  1.91012003] [0.5 0.5] 2.0 [-0.07292045  1.93512003] False 

sars', done = [-0.07292045  1.93512003] [0.5 0.5] 2.0 [-0.04792045  1.96012003] False 

sars', done = [-0.04792045  1.96012003] [0.5 0.5] 2.0 [-0.02292045  1.98512003] False 

sars', done = [-0.02292045  1.98512003] [0.5 0.5] 2.0 [0.00207955 2.01012003] False 

sars', done = [0.00207955 2.01012003] [0.5 0.5] 0.0 [0.02707955 2.03512003] False 

sars', done = [0.02707955 2.03512003] [0.5 0.5] 0.0 [0.05207955 2.06012003] False 

sars', done = [0.05207955 2.06012003] [0.5 0.5] 0.0 [0.07707955 2.08512003] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 10.0 0 35
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.44190558 -0.53462555]
Env SEED set to: 3 Returned seed from Gym: 3
Seeds set to: {'env': 3, 'state_space': 10000, 'action_space': 101}
#TODO for cont. spaces?: init_reward_function
#TODO for cont. spaces
#TODO for cont. spaces: reset
RESET called. State reset to: [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591]
self.augmented_state, len [[nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], [nan, nan, nan, nan, nan], array([-0.79792045,  1.21012003,  0.44190558, -0.53462555, -0.00606591])] 12
toy env instantiated with config: {'seed': {'env': 3, 'state_space': 10000, 'action_space': 101}, 'state_space_type': 'continuous', 'action_space_type': 'continuous', 'state_space_dim': 5, 'action_space_dim': 5, 'transition_dynamics_order': 1, 'inertia': 2.0, 'time_unit': 0.1, 'delay': 10, 'sequence_length': 1, 'reward_function': 'move_to_a_point', 'make_denser': False, 'target_point': array([1.71012 , 0.941906]), 'target_radius': 0.072, 'reward_unit': 2.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': [1, 2], 'action_space_relevant_indices': [1, 2]}
sars', done = [-0.79792045  1.21012003  0.44190558 -0.53462555 -0.00606591] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] False 

sars', done = [-0.77292045  1.23512003  0.46690558 -0.50962555  0.01893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] False 

sars', done = [-0.74792045  1.26012003  0.49190558 -0.48462555  0.04393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] False 

sars', done = [-0.72292045  1.28512003  0.51690558 -0.45962555  0.06893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] False 

sars', done = [-0.69792045  1.31012003  0.54190558 -0.43462555  0.09393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] False 

sars', done = [-0.67292045  1.33512003  0.56690558 -0.40962555  0.11893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] False 

sars', done = [-0.64792045  1.36012003  0.59190558 -0.38462555  0.14393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] False 

sars', done = [-0.62292045  1.38512003  0.61690558 -0.35962555  0.16893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] False 

sars', done = [-0.59792045  1.41012003  0.64190558 -0.33462555  0.19393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] False 

sars', done = [-0.57292045  1.43512003  0.66690558 -0.30962555  0.21893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] False 

sars', done = [-0.54792045  1.46012003  0.69190558 -0.28462555  0.24393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] False 

sars', done = [-0.52292045  1.48512003  0.71690558 -0.25962555  0.26893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] False 

sars', done = [-0.49792045  1.51012003  0.74190558 -0.23462555  0.29393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] False 

sars', done = [-0.47292045  1.53512003  0.76690558 -0.20962555  0.31893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] False 

sars', done = [-0.44792045  1.56012003  0.79190558 -0.18462555  0.34393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] False 

sars', done = [-0.42292045  1.58512003  0.81690558 -0.15962555  0.36893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] False 

sars', done = [-0.39792045  1.61012003  0.84190558 -0.13462555  0.39393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] False 

sars', done = [-0.37292045  1.63512003  0.86690558 -0.10962555  0.41893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] False 

sars', done = [-0.34792045  1.66012003  0.89190558 -0.08462555  0.44393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] False 

sars', done = [-0.32292045  1.68512003  0.91690558 -0.05962555  0.46893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.29792045  1.71012003  0.94190558 -0.03462555  0.49393409] False 

sars', done = [-0.29792045  1.71012003  0.94190558 -0.03462555  0.49393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.27292045  1.73512003  0.96690558 -0.00962555  0.51893409] False 

sars', done = [-0.27292045  1.73512003  0.96690558 -0.00962555  0.51893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.24792045  1.76012003  0.99190558  0.01537445  0.54393409] False 

sars', done = [-0.24792045  1.76012003  0.99190558  0.01537445  0.54393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.22292045  1.78512003  1.01690558  0.04037445  0.56893409] False 

sars', done = [-0.22292045  1.78512003  1.01690558  0.04037445  0.56893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.19792045  1.81012003  1.04190558  0.06537445  0.59393409] False 

sars', done = [-0.19792045  1.81012003  1.04190558  0.06537445  0.59393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.17292045  1.83512003  1.06690558  0.09037445  0.61893409] False 

sars', done = [-0.17292045  1.83512003  1.06690558  0.09037445  0.61893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.14792045  1.86012003  1.09190558  0.11537445  0.64393409] False 

sars', done = [-0.14792045  1.86012003  1.09190558  0.11537445  0.64393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [-0.12292045  1.88512003  1.11690558  0.14037445  0.66893409] False 

sars', done = [-0.12292045  1.88512003  1.11690558  0.14037445  0.66893409] [0.5 0.5 0.5 0.5 0.5] 2.0 [-0.09792045  1.91012003  1.14190558  0.16537445  0.69393409] False 

sars', done = [-0.09792045  1.91012003  1.14190558  0.16537445  0.69393409] [0.5 0.5 0.5 0.5 0.5] 2.0 [-0.07292045  1.93512003  1.16690558  0.19037445  0.71893409] False 

sars', done = [-0.07292045  1.93512003  1.16690558  0.19037445  0.71893409] [0.5 0.5 0.5 0.5 0.5] 2.0 [-0.04792045  1.96012003  1.19190558  0.21537445  0.74393409] False 

sars', done = [-0.04792045  1.96012003  1.19190558  0.21537445  0.74393409] [0.5 0.5 0.5 0.5 0.5] 2.0 [-0.02292045  1.98512003  1.21690558  0.24037445  0.76893409] False 

sars', done = [-0.02292045  1.98512003  1.21690558  0.24037445  0.76893409] [0.5 0.5 0.5 0.5 0.5] 2.0 [0.00207955 2.01012003 1.24190558 0.26537445 0.79393409] False 

sars', done = [0.00207955 2.01012003 1.24190558 0.26537445 0.79393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [0.02707955 2.03512003 1.26690558 0.29037445 0.81893409] False 

sars', done = [0.02707955 2.03512003 1.26690558 0.29037445 0.81893409] [0.5 0.5 0.5 0.5 0.5] 0.0 [0.05207955 2.06012003 1.29190558 0.31537445 0.84393409] False 

sars', done = [0.05207955 2.06012003 1.29190558 0.31537445 0.84393409] [0.5 0.5 0.5 0.5 0.5] 0.0 [0.07707955 2.08512003 1.31690558 0.34037445 0.86893409] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 10.0 0 35
#TODO for cont. spaces: reset
RESET called. State reset to: [ 0.66707688 -2.03656313  0.1048439  -1.39285609  0.15490248]
TEST_DISCRETE_ALL_META_FEATURES
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [4, 5, 6] 87 120
specific_sequence that will be rewarded [0, 1, 5]
specific_sequence that will be rewarded [1, 0, 5]
specific_sequence that will be rewarded [5, 3, 4]
specific_sequence that will be rewarded [2, 4, 3]
specific_sequence that will be rewarded [5, 1, 3]
specific_sequence that will be rewarded [3, 4, 5]
specific_sequence that will be rewarded [2, 3, 1]
specific_sequence that will be rewarded [3, 5, 1]
specific_sequence that will be rewarded [4, 1, 5]
specific_sequence that will be rewarded [2, 3, 0]
specific_sequence that will be rewarded [0, 5, 4]
specific_sequence that will be rewarded [4, 5, 2]
specific_sequence that will be rewarded [2, 1, 0]
specific_sequence that will be rewarded [2, 1, 5]
specific_sequence that will be rewarded [1, 2, 5]
specific_sequence that will be rewarded [3, 1, 2]
specific_sequence that will be rewarded [2, 1, 3]
specific_sequence that will be rewarded [5, 3, 2]
specific_sequence that will be rewarded [4, 0, 5]
specific_sequence that will be rewarded [2, 0, 1]
specific_sequence that will be rewarded [5, 0, 4]
specific_sequence that will be rewarded [4, 2, 0]
specific_sequence that will be rewarded [3, 5, 0]
specific_sequence that will be rewarded [0, 5, 1]
specific_sequence that will be rewarded [1, 2, 3]
specific_sequence that will be rewarded [3, 1, 4]
specific_sequence that will be rewarded [3, 2, 4]
specific_sequence that will be rewarded [1, 3, 0]
specific_sequence that will be rewarded [0, 4, 5]
specific_sequence that will be rewarded [0, 1, 4]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 30 Out of 120
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. curr_state set to: 2
self.augmented_state, len [nan, nan, nan, nan, 2] 5
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 8, 'action_space_size': 8, 'reward_density': 0.25, 'make_denser': False, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 1, 'sequence_length': 3, 'reward_unit': 1.0, 'reward_noise': <function TestRLToyEnv.test_discrete_all_meta_features.<locals>.<lambda> at 0x7fa658adc1e0>, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 8), 'action_space_relevant_indices': range(0, 8), 'relevant_state_space_size': 8, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 8, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
[nan, nan, nan, 2, 3] with delay 1
sars', done = 2 6 -0.2928080556634023 3 False 

[nan, nan, 2, 3, 1] with delay 1
sars', done = 3 6 0.7706963434374121 1 False 

[nan, 2, 3, 1, 2] with delay 1
sars', done = 1 2 -0.017436116113536126 2 False 

[2, 3, 1, 2, 1] with delay 1
sars', done = 2 3 0.9572316829702407 1 False 

[3, 1, 2, 1, 5] with delay 1
sars', done = 1 4 0.7876131086463287 5 False 

[1, 2, 1, 5, 5] with delay 1
sars', done = 5 2 0.48991303668322383 5 False 

[2, 1, 5, 5, 0] with delay 1
sars', done = 5 3 -0.08997838362625013 0 False 

[1, 5, 5, 0, 3] with delay 1
sars', done = 0 5 0.48654863938747184 3 False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 3.9979359272209365 0 3.0 0 8
RESET called. curr_state set to: 4
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 6, 'relevant_action_space': 6}
config["relevant_state_space_size"] inited to: 6
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 6
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [5] total 1
self.relevant_init_state_dist: [0.2 0.2 0.2 0.2 0.2 0. ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [3, 4, 5] 40 60
specific_sequence that will be rewarded [4, 0, 3]
specific_sequence that will be rewarded [3, 4, 2]
specific_sequence that will be rewarded [3, 2, 4]
specific_sequence that will be rewarded [0, 1, 4]
specific_sequence that will be rewarded [4, 1, 3]
specific_sequence that will be rewarded [1, 0, 4]
specific_sequence that will be rewarded [1, 2, 4]
specific_sequence that will be rewarded [1, 2, 3]
specific_sequence that will be rewarded [0, 3, 2]
specific_sequence that will be rewarded [2, 0, 1]
specific_sequence that will be rewarded [0, 3, 4]
specific_sequence that will be rewarded [1, 0, 2]
specific_sequence that will be rewarded [1, 4, 0]
specific_sequence that will be rewarded [0, 2, 1]
specific_sequence that will be rewarded [2, 1, 0]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 15 Out of 60
[[2 5 4 3 0 1]
 [4 3 5 0 2 1]
 [3 5 1 2 0 4]
 [1 4 2 0 3 5]
 [2 4 3 5 0 1]
 [5 5 5 5 5 5]] init_transition_function <class 'int'>
RESET called. curr_state set to: 2
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [], []]
 self.delay, self.sequence_length: 0 3
self.augmented_state, len [nan, nan, nan, 2] 4
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 6, 'relevant_action_space': 6}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 6, 'action_space_size': 6, 'reward_density': 0.25, 'make_denser': True, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 0, 'sequence_length': 3, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 6), 'action_space_relevant_indices': range(0, 6), 'relevant_state_space_size': 6, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 6, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([5]), 'relevant_init_state_dist': array([0.2, 0.2, 0.2, 0.2, 0.2, 0. ]), 'transition_function': array([[2, 5, 4, 3, 0, 1],
       [4, 3, 5, 0, 2, 1],
       [3, 5, 1, 2, 0, 4],
       [1, 4, 2, 0, 3, 5],
       [2, 4, 3, 5, 0, 1],
       [5, 5, 5, 5, 5, 5]], dtype=object)}
rew 1.6666666666666667
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [[1, 0], [1, 2], [1, 2], [1, 0], [1, 4]], [[2, 1, 0]]]
sars', done = 2 2 1.6666666666666667 1 False 

rew 2.0
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [[2, 0], [2, 1]], [[1, 2, 4], [1, 2, 3]]]
sars', done = 1 4 2.0 2 False 

rew 0.0
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [], []]
sars', done = 2 1 0.0 5 True 

rew 0.0
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [], []]
sars', done = 5 1 0.0 5 True 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.666666666666667 0 4
RESET called. curr_state set to: 4
self.possible_remaining_sequences [[[4], [3], [3], [0], [4], [1], [1], [1], [0], [2], [0], [1], [1], [0], [2]], [], []]
 self.delay, self.sequence_length: 0 3
TEST_DISCRETE_MULTI_DISCRETE
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 3 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. Relevant part of state reset to: 0
RESET called. curr_state set to: [0, 0, 0]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
self.augmented_state, len [nan, nan, nan, nan, 0] 5
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': [2, 2, 2], 'state_space_relevant_indices': [0, 1, 2], 'action_space_size': [2, 2, 2], 'action_space_relevant_indices': [0, 1, 2], 'reward_density': 0.25, 'make_denser': True, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 3, 'sequence_length': 1, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_multi_discrete_sizes': [2, 2, 2], 'relevant_state_space_size': 8, 'state_space_irrelevant_indices': [], 'irrelevant_state_space_size': 0, 'action_space_multi_discrete_sizes': [2, 2, 2], 'relevant_action_space_size': 8, 'action_space_irrelevant_indices': [], 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0] [1, 1, 0] 0.0 [0, 1, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0] [0, 1, 0] 0.0 [0, 1, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0] [1, 0, 1] 0.0 [1, 0, 1] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1] [1, 0, 0] 1.0 [0, 1, 0] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0] [1, 0, 1] 1.0 [1, 0, 1] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1] [0, 1, 0] 0.0 [1, 0, 1] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1] [0, 1, 1] 1.0 [0, 0, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0] [0, 0, 1] 0.0 [1, 0, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 0] [1, 0, 0] 0.0 [1, 1, 1] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.0 0 9
RESET called. Relevant part of state reset to: 4
RESET called. curr_state set to: [1, 0, 0]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
[32;1;4mTEST_DISCRETE_MULTI_DISCRETE_IRRELEVANT_DIMENSIONS[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8, 'irrelevant_state_space': 52, 'irrelevant_action_space': 65, 'state_space': 87, 'action_space': 89}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 3
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 5
Caught Expected exception: config["irrelevant_state_space_size"] != config["irrelevant_action_space_size"]. For completely_connected transition graphs, they should be equal. Please provide valid values! Vals: 3 5. In future, "maximally_connected" graphs are planned to be supported!
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8, 'irrelevant_state_space': 52, 'irrelevant_action_space': 65, 'state_space': 87, 'action_space': 89}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 5
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 5
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
self.irrelevant_init_state_dist: [0.2 0.2 0.2 0.2 0.2]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 0 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
[[0 3 2 1 4]
 [2 4 0 1 3]
 [4 2 0 3 1]
 [2 0 4 3 1]
 [1 4 0 3 2]] init_transition_function _irrelevant <class 'int'>
RESET called. Relevant part of state reset to: 0
Irrelevant part of state reset to: 3
RESET called. curr_state set to: [0, 0, 0, 3]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
self.augmented_state, len [nan, nan, nan, nan, 0] 5
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8, 'irrelevant_state_space': 52, 'irrelevant_action_space': 65, 'state_space': 87, 'action_space': 89}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': [2, 2, 2, 5], 'state_space_relevant_indices': [0, 1, 2], 'action_space_size': [2, 5, 2, 2], 'action_space_relevant_indices': [0, 2, 3], 'reward_density': 0.25, 'make_denser': True, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 3, 'sequence_length': 1, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_multi_discrete_sizes': [2, 2, 2, 5], 'relevant_state_space_size': 8, 'state_space_irrelevant_indices': [3], 'irrelevant_state_space_size': 5, 'action_space_multi_discrete_sizes': [2, 5, 2, 2], 'relevant_action_space_size': 8, 'action_space_irrelevant_indices': [1], 'irrelevant_action_space_size': 5, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'irrelevant_init_state_dist': array([0.2, 0.2, 0.2, 0.2, 0.2]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object), 'transition_function_irrelevant': array([[0, 3, 2, 1, 4],
       [2, 4, 0, 1, 3],
       [4, 2, 0, 3, 1],
       [2, 0, 4, 3, 1],
       [1, 4, 0, 3, 2]], dtype=object)}
rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0, 3] [1, 4, 1, 0] 0.0 [0, 1, 0, 1] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 1] [0, 3, 1, 0] 0.0 [0, 1, 0, 1] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 1] [1, 4, 0, 1] 0.0 [1, 0, 1, 3] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 3] [1, 0, 0, 0] 1.0 [0, 1, 0, 2] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 2] [1, 2, 0, 1] 1.0 [1, 0, 1, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 0] [0, 3, 1, 0] 0.0 [1, 0, 1, 1] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 1] [0, 1, 1, 1] 1.0 [0, 0, 0, 4] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0, 4] [0, 4, 0, 1] 0.0 [1, 0, 0, 2] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 0, 2] [1, 4, 0, 0] 0.0 [1, 1, 1, 1] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.0 0 9
RESET called. Relevant part of state reset to: 2
Irrelevant part of state reset to: 3
RESET called. curr_state set to: [0, 1, 0, 3]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8, 'irrelevant_state_space': 52, 'irrelevant_action_space': 65, 'state_space': 87, 'action_space': 89}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 5
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 5
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
self.irrelevant_init_state_dist: [0.2 0.2 0.2 0.2 0.2]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 3 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
[[0 3 2 1 4]
 [2 4 0 1 3]
 [4 2 0 3 1]
 [2 0 4 3 1]
 [1 4 0 3 2]] init_transition_function _irrelevant <class 'int'>
RESET called. Relevant part of state reset to: 0
Irrelevant part of state reset to: 3
RESET called. curr_state set to: [0, 0, 0, 0, 3]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
self.augmented_state, len [nan, nan, nan, nan, 0] 5
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8, 'irrelevant_state_space': 52, 'irrelevant_action_space': 65, 'state_space': 87, 'action_space': 89}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': [2, 2, 2, 1, 5], 'state_space_relevant_indices': [0, 1, 2], 'action_space_size': [2, 5, 1, 1, 2, 2], 'action_space_relevant_indices': [0, 4, 5], 'reward_density': 0.25, 'make_denser': True, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 3, 'sequence_length': 1, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_multi_discrete_sizes': [2, 2, 2, 1, 5], 'relevant_state_space_size': 8, 'state_space_irrelevant_indices': [3, 4], 'irrelevant_state_space_size': 5, 'action_space_multi_discrete_sizes': [2, 5, 1, 1, 2, 2], 'relevant_action_space_size': 8, 'action_space_irrelevant_indices': [1, 2, 3], 'irrelevant_action_space_size': 5, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'irrelevant_init_state_dist': array([0.2, 0.2, 0.2, 0.2, 0.2]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object), 'transition_function_irrelevant': array([[0, 3, 2, 1, 4],
       [2, 4, 0, 1, 3],
       [4, 2, 0, 3, 1],
       [2, 0, 4, 3, 1],
       [1, 4, 0, 3, 2]], dtype=object)}
rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0, 0, 3] [1, 4, 0, 0, 1, 0] 0.0 [0, 1, 0, 0, 1] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 0, 1] [0, 3, 0, 0, 1, 0] 0.0 [0, 1, 0, 0, 1] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 0, 1] [1, 4, 0, 0, 0, 1] 0.0 [1, 0, 1, 0, 3] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 0, 3] [1, 0, 0, 0, 0, 0] 1.0 [0, 1, 0, 0, 2] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 1, 0, 0, 2] [1, 2, 0, 0, 0, 1] 1.0 [1, 0, 1, 0, 0] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 0, 0] [0, 3, 0, 0, 1, 0] 0.0 [1, 0, 1, 0, 1] False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 1, 0, 1] [0, 1, 0, 0, 1, 1] 1.0 [0, 0, 0, 0, 4] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [0, 0, 0, 0, 4] [0, 4, 0, 0, 0, 1] 0.0 [1, 0, 0, 0, 2] False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = [1, 0, 0, 0, 2] [1, 4, 0, 0, 0, 0] 0.0 [1, 1, 1, 0, 1] False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.0 0 9
RESET called. Relevant part of state reset to: 2
Irrelevant part of state reset to: 3
RESET called. curr_state set to: [0, 1, 0, 0, 3]
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
TEST_DISCRETE_P_NOISE
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 3 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. curr_state set to: 0
self.augmented_state, len [nan, 0] 2
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 8, 'action_space_size': 8, 'reward_density': 0.25, 'make_denser': False, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 0, 'sequence_length': 1, 'reward_unit': 1.0, 'transition_noise': 0.5, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 8), 'action_space_relevant_indices': range(0, 8), 'relevant_state_space_size': 8, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 8, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
[0, 2] with delay 0
sars', done = 0 6 1.0 2 False 

NOISE inserted! old next_state, new_next_state 3 6
[2, 6] with delay 0
sars', done = 2 6 0.0 6 True 

[6, 6] with delay 0
sars', done = 6 2 0.0 6 True 

NOISE inserted! old next_state, new_next_state 6 3
[6, 3] with delay 0
sars', done = 6 3 0.0 3 False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 1.0 2 4
RESET called. curr_state set to: 4
TEST_DISCRETE_R_NOISE
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 1 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. curr_state set to: 0
self.augmented_state, len [nan, 0] 2
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 8, 'action_space_size': 8, 'reward_density': 0.25, 'make_denser': False, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 0, 'sequence_length': 1, 'reward_unit': 1.0, 'reward_noise': <function TestRLToyEnv.test_discrete_r_noise.<locals>.<lambda> at 0x7fa6587edc80>, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 8), 'action_space_relevant_indices': range(0, 8), 'relevant_state_space_size': 8, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 8, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
[0, 2] with delay 0
sars', done = 0 6 0.5002835931259294 2 False 

[2, 3] with delay 0
sars', done = 2 6 0.805124428468207 3 False 

[3, 5] with delay 0
sars', done = 3 2 -0.22481242175109611 5 False 

[5, 6] with delay 0
sars', done = 5 1 0.08674894641195517 6 True 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 1.6164022035053287 0 1.0 0 4
RESET called. curr_state set to: 3
[32;1;4mTEST_DISCRETE_REWARD_DELAY[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [6] 0 6
specific_sequence that will be rewarded [2]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 1 Out of 6
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. curr_state set to: 0
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
self.augmented_state, len [nan, nan, nan, nan, 0] 5
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 8, 'action_space_size': 8, 'reward_density': 0.25, 'make_denser': True, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 3, 'sequence_length': 1, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 8), 'action_space_relevant_indices': range(0, 8), 'relevant_state_space_size': 8, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 8, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 0 6 0.0 2 False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 2 2 0.0 2 False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 2 5 0.0 5 False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = 5 4 1.0 2 False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = 2 5 1.0 5 False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 5 2 0.0 5 False 

rew 1.0
self.possible_remaining_sequences [[[2]]]
sars', done = 5 3 1.0 0 False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 0 7 0.0 1 False 

rew 0.0
self.possible_remaining_sequences [[[2]]]
sars', done = 1 4 0.0 5 False 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.0 0 9
RESET called. curr_state set to: 4
self.possible_remaining_sequences [[[2]]]
 self.delay, self.sequence_length: 3 1
[32;1;4mTEST_DISCRETE_REWARDABLE_SEQUENCES[0m
Env SEED set to: 0 Returned seed from Gym: 0
Seeds set to: {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}
config["relevant_state_space_size"] inited to: 8
config["irrelevant_state_space_size"] inited to: 0
config["relevant_action_space_size"] inited to: 8
config["irrelevant_action_space_size"] inited to: 0
Inited terminal states to self.config['is_terminal_state']: [7 6] total 2
self.relevant_init_state_dist: [0.16666667 0.16666667 0.16666667 0.16666667 0.16666667 0.16666667
 0.         0.        ]
No. of choices for each element in a possible sequence (Total no. of permutations will be a product of this), 1 random number out of possible perms, no. of possible perms [4, 5, 6] 17 120
specific_sequence that will be rewarded [0, 1, 5]
specific_sequence that will be rewarded [1, 0, 5]
specific_sequence that will be rewarded [5, 3, 4]
specific_sequence that will be rewarded [2, 4, 3]
specific_sequence that will be rewarded [5, 1, 3]
specific_sequence that will be rewarded [3, 4, 5]
specific_sequence that will be rewarded [2, 3, 1]
specific_sequence that will be rewarded [3, 5, 1]
specific_sequence that will be rewarded [4, 1, 5]
specific_sequence that will be rewarded [2, 3, 0]
specific_sequence that will be rewarded [0, 5, 4]
specific_sequence that will be rewarded [4, 5, 2]
specific_sequence that will be rewarded [2, 1, 0]
specific_sequence that will be rewarded [2, 1, 5]
specific_sequence that will be rewarded [1, 2, 5]
specific_sequence that will be rewarded [3, 1, 2]
specific_sequence that will be rewarded [2, 1, 3]
specific_sequence that will be rewarded [5, 3, 2]
specific_sequence that will be rewarded [4, 0, 5]
specific_sequence that will be rewarded [2, 0, 1]
specific_sequence that will be rewarded [5, 0, 4]
specific_sequence that will be rewarded [4, 2, 0]
specific_sequence that will be rewarded [3, 5, 0]
specific_sequence that will be rewarded [0, 5, 1]
specific_sequence that will be rewarded [1, 2, 3]
specific_sequence that will be rewarded [3, 1, 4]
specific_sequence that will be rewarded [3, 2, 4]
specific_sequence that will be rewarded [1, 3, 0]
specific_sequence that will be rewarded [0, 4, 5]
specific_sequence that will be rewarded [0, 1, 4]
Number of generated sequences that did not clash with an existing one when it was generated: 0
Total no. of rewarded sequences: 30 Out of 120
[[5 4 0 6 7 3 2 1]
 [4 7 2 6 5 1 0 3]
 [4 7 2 1 6 5 3 0]
 [7 2 5 3 6 0 1 4]
 [4 1 6 2 7 3 0 5]
 [1 6 5 0 2 7 3 4]
 [6 6 6 6 6 6 6 6]
 [7 7 7 7 7 7 7 7]] init_transition_function <class 'int'>
RESET called. curr_state set to: 2
self.augmented_state, len [nan, nan, nan, 2] 4
toy env instantiated with config: {'seed': {'env': 0, 'relevant_state_space': 8, 'relevant_action_space': 8}, 'state_space_type': 'discrete', 'action_space_type': 'discrete', 'state_space_size': 8, 'action_space_size': 8, 'reward_density': 0.25, 'make_denser': False, 'terminal_state_density': 0.25, 'completely_connected': True, 'repeats_in_sequences': False, 'delay': 0, 'sequence_length': 3, 'reward_unit': 1.0, 'generate_random_mdp': True, 'term_state_reward': 0.0, 'state_space_relevant_indices': range(0, 8), 'action_space_relevant_indices': range(0, 8), 'relevant_state_space_size': 8, 'irrelevant_state_space_size': 0, 'relevant_action_space_size': 8, 'irrelevant_action_space_size': 0, 'is_terminal_state': array([7, 6]), 'relevant_init_state_dist': array([0.16666667, 0.16666667, 0.16666667, 0.16666667, 0.16666667,
       0.16666667, 0.        , 0.        ]), 'transition_function': array([[5, 4, 0, 6, 7, 3, 2, 1],
       [4, 7, 2, 6, 5, 1, 0, 3],
       [4, 7, 2, 1, 6, 5, 3, 0],
       [7, 2, 5, 3, 6, 0, 1, 4],
       [4, 1, 6, 2, 7, 3, 0, 5],
       [1, 6, 5, 0, 2, 7, 3, 4],
       [6, 6, 6, 6, 6, 6, 6, 6],
       [7, 7, 7, 7, 7, 7, 7, 7]], dtype=object)}
[nan, nan, 2, 3] with delay 0
sars', done = 2 6 0.0 3 False 

[nan, 2, 3, 1] with delay 0
sars', done = 3 6 1.0 1 False 

[2, 3, 1, 2] with delay 0
sars', done = 1 2 1.0 2 False 

[3, 1, 2, 1] with delay 0
sars', done = 2 3 0.0 1 False 

[1, 2, 1, 5] with delay 0
sars', done = 1 4 1.0 5 False 

[2, 1, 5, 5] with delay 0
sars', done = 5 2 0.0 5 False 

[1, 5, 5, 6] with delay 0
sars', done = 5 1 0.0 6 True 

[5, 5, 6, 6] with delay 0
sars', done = 6 5 0.0 6 True 

Noise stats for previous episode num.: 1 (total abs. noise in rewards, total abs. noise in transitions, total reward, total noisy transitions, total transitions): 0 0 3.0 0 8
RESET called. curr_state set to: 4
